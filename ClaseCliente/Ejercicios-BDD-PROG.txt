BDD
1. Escribe la instrucción para crear una tabla “clientes”. Esta tabla tiene los siguientes
campo:
	id_cliente: entero (este campo es el campo clave)
	nombre: cadena de caracteres de tamaño 30
	dirección: cadena de caracteres de tamaño 50
	telefono: cadena de caracteres de tamaño 10

	CREATE TABLE clientes (
	id_cliente NUMBER(2) PRIMARY KEY,
	nombre VARCHAR2(10),
	direccion VARCHAR2(20),
	telefono NUMBER(9)
	);

2. Escribe la instrucción para insertar 2 clientes en esa tabla (inventate los valores).
	INSERT INTO clientes VALUES (1, 'pedro', 'calle robledo', '678987543');
	INSERT INTO clientes VALUES (2, 'pepe', 'calle albacete', '686458389');

3. Escribe una instrucción para visualizar todos los registros y toda la información de la tabla clientes.
	SELECT * FROM clientes;		

4. Escribe una isntrucción para visualizar el nif de un cliente llamado “pepe”.
	SELECT id_cliente FROM clientes WHERE nombre='pepe';

5. Escribe una instrucción para visualizar el nombre de cliente y el teléfono de todos los clientes de la tabla.
	SELECT nombre, telefono FROM clientes;

6. Modificar el telefono de pepe.
	UPDATE clientes SET telefono = '666666666' WHERE nombre='pepe';

7. Elimina a pepe.
	DELETE FROM clientes WHERE nombre='pepe';


PROGRAMACIÓN:
1. Escribe el código necesario para mostrar por pantalla el contenido del siguiente array Int numeros={5,3,1,0,7}.
	int numeros[] = {5,3,1,0,7};

2. Crea una clase “Cliente” que tenga las propiedades :
	id_cliente: entero
	nombre: cadena de caracteres
	dirección: cadena de caracteres
	telefono: cadena de caracteres
	
	public class Cliente {
		int id_cliente;
		String nombre;
		String direccion;
		int telefono;
	}

	public Client(int i, String n, String d, int t) {
		int id = i;
		String nombre = n;
		String dir = d;
		int tel = t;
	}

3. En la clase “Cliente”, añade un método para visualizar la información de un cliente
	public String toString() {
		return ...
	}

4. En la clase cliente, crea un método void pedirDatos() que pida por pantalla todos los
datos de un cliente. No hay que hacer control de excepciones.
5. En la clase cliente, crea un método void guardarDatos() que escriba los datos de un
cliente en un archivo misclientes.txt.